/*
 Generated by typeshare 1.13.2
*/

export type Maidenhead = string;

export interface ActivationView<T> {
	key?: string;
	values: T[];
}

export interface AlertView {
	program: string;
	alert_id: number;
	user_id: number;
	reference: string;
	reference_detail: string;
	location: string;
	activator: string;
	operator: string;
	activator_name?: string;
	start_time: string;
	end_time?: string;
	frequencies: string;
	comment?: string;
	poster?: string;
}

export interface AprsLogView {
	time: string;
	callsign: string;
	ssid: number;
	destination: string;
	state: string;
	distance: number;
	longitude: number;
	latitude: number;
}

export interface CenturyCodeView {
	muniCode?: number;
	prefecture?: string;
	municipality?: string;
	jccCode?: string;
	wardCode?: string;
	jccText?: string;
	jcgCode?: string;
	jcgText?: string;
	hamlogCode?: string;
	maidenhead: string;
}

export interface GeomagView {
	date: string;
	aIndex: number;
	kIndex: number[];
}

export interface PagenatedResponse<SOTAReference> {
	total: number;
	limit: number;
	offset: number;
	results: SOTAReference[];
}

export interface PotaLogHistView {
	logId: string;
	logKind: string;
	lastUpdate: string;
}

export interface PotaLogStatEntView {
	time: string;
	users: number;
	logs: number;
}

export interface PotaLogStatView {
	log_uploaded: number;
	log_entries: number;
	log_expired: number;
	log_error: number;
	longest_id: string;
	longest_entry: number;
	query_latency: string;
	log_history: PotaLogStatEntView[];
}

export interface PotaRefLogView {
	potaCode: string;
	wwffCode: string;
	parkName: string;
	parkNameJ: string;
	parkLocation: string;
	parkLocid: string;
	parkType: string;
	parkInactive: boolean;
	parkArea: number;
	longitude?: number;
	latitude?: number;
	maidenhead: Maidenhead;
	attempts?: number;
	activations?: number;
	firstQsoDate?: string;
	qsos?: number;
}

export interface PotaRefView {
	potaCode: string;
	wwffCode: string;
	parkName: string;
	parkNameJ: string;
	parkLocation: string;
	parkLocid: string;
	parkType: string;
	parkInactive: boolean;
	parkArea: number;
	longitude: number;
	latitude: number;
	maidenhead: Maidenhead;
}

export interface PotaSearchView {
	pota: string;
	wwff: string;
	name: string;
	nameJ: string;
	locid: string[];
	area: number;
	lon?: number;
	lat?: number;
	atmpt?: number;
	act?: number;
	date?: string;
	qsos?: number;
}

export interface SearchBriefData {
	code: string;
	lon: number;
	lat: number;
	name: string;
	nameJ: string;
}

export interface SearchBriefResponse {
	count: number;
	candidates: SearchBriefData[];
}

export interface SotaRefView {
	summitCode: string;
	associationName: string;
	regionName: string;
	summitName: string;
	summitNameJ?: string;
	city?: string;
	cityJ?: string;
	altM: number;
	longitude: number;
	latitude: number;
	maidenhead: Maidenhead;
	points: number;
	bonusPoints: number;
	activationCount: number;
	activationDate?: string;
	activationCall?: string;
}

export interface SearchFullResponse {
	sota?: SotaRefView[];
	pota?: PotaRefLogView[];
}

export interface SotaSearchView {
	code: string;
	name: string;
	nameJ?: string;
	alt: number;
	lon: number;
	lat: number;
	pts: number;
	count: number;
}

export interface SearchResponse {
	sota?: SotaSearchView[];
	pota?: PotaSearchView[];
}

export interface SpotView {
	program: string;
	spotId: number;
	reference: string;
	referenceDetail: string;
	activator: string;
	activatorName?: string;
	spotTime: string;
	frequency: string;
	mode: string;
	spotter: string;
	comment?: string;
	qsos?: number;
}

